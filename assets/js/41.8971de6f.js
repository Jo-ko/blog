(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{600:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"什么是fiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是fiber"}},[s._v("#")]),s._v(" 什么是Fiber")]),s._v(" "),a("blockquote",[a("p",[s._v("React中的Fiber表示的是用于替换原有Stack更新模型的一种将 "),a("strong",[s._v("IO密集型操作碎片化")]),s._v(" 的模型")])]),s._v(" "),a("ol",[a("li",[s._v("表示一种流程控制原语,字面意思为协程,也叫纤程,作用是控制流程的让出机制, React中的Fiber遵循的是一种主动让出机制: 合作式调度")]),s._v(" "),a("li",[s._v("表示一个执行单元,或者说是一种数据结构,保存着结构信息,任务信息和调度信息")])]),s._v(" "),a("h2",{attrs:{id:"为什么会有fiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会有fiber"}},[s._v("#")]),s._v(" 为什么会有Fiber")]),s._v(" "),a("blockquote",[a("p",[s._v("首先,我们需要了解"),a("RouterLink",{attrs:{to:"/docs/browser/struct.html#what-happens-in-渲染进程"}},[s._v("浏览器一帧中执行了什么")]),s._v(".\n在React16之前的版本对更新/挂载 -> 组件生命周期调用 -> 计算和对比虚拟dom -> 将不同更新到真实DOM树上这一个整个过程是一气呵成的,\n因此当整个组件较大时,由于执行的时间较长,会造成js主线程被长时间占用,使得浏览器在一帧中可执行的操作受限,从而影响用户的其他操作和页面的渲染,所以我们需要一种机制来可中断/恢复更新执行过程")],1)]),s._v(" "),a("h2",{attrs:{id:"fiber是如何控制任务中断-恢复的-调度的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber是如何控制任务中断-恢复的-调度的"}},[s._v("#")]),s._v(" Fiber是如何控制任务中断/恢复的(调度的)")]),s._v(" "),a("blockquote",[a("p",[s._v("严格意义上说Fiber本质是一种数据结构(16中的虚拟dom),它并非控制中断/恢复,而是保存了更新的数据节点相关信息,给Schedule调度器提供了更新任务优先级属性等一些信息的 "),a("strong",[s._v("执行单元")]),s._v(",Schedule调度器才是真正控制更新中断/恢复的执行者")])]),s._v(" "),a("ol",[a("li",[s._v("我们将fiber视为一个执行单元, 每次通过requestIdleCallback(React自己实现了调度器Schedule)执行完一个单元(workLoop),就会检查剩余的时间,如果没有时间就会将控制权交还给宿主环境")]),s._v(" "),a("li",[s._v("Fiber的调度利用了requestAnimation在EventLoop进入渲染前开始触发执行任务,同时记录时间,通过调用MessageChannel, 任务会在下一帧最开始的时候开始执行(根据EventLoop运行机制,MessageChannel会在宏任务中较先执行,但其实setImmediate才是最先执行的宏任务)")])]),s._v(" "),a("h3",{attrs:{id:"两种情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两种情况"}},[s._v("#")]),s._v(" 两种情况")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("任务的过期时间超时,任务被中断")]),s._v(" "),a("p",[s._v("中断: 在shouldYield判断中断更新后,会将当前任务保存在scheduledHostCallback变量中")]),s._v(" "),a("p",[s._v("恢复: 在再次触发调度的时候,会从中断的scheduledHostCallback变量中的任务恢复")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("高优先级任务插入,低优先级被中断")]),s._v(" "),a("p",[s._v("中断: 调用cancelCallback将任务的callback设置为null, 在workLoop执行的过程中callback=null会被踢出任务队列")]),s._v(" "),a("p",[s._v("恢复: 调用unstable_scheduleCallback重新恢复任务, 不同的是,调度会重新从root开始")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("大致流程图")]),s._v(" "),a("img",{attrs:{src:s.$withBase("/framework/react_origin_fiber_interrupter.png"),alt:"react_origin_fiber_interrupter"}})]),s._v(" "),a("h2",{attrs:{id:"fiber中断机制的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber中断机制的问题"}},[s._v("#")]),s._v(" Fiber中断机制的问题")]),s._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[s._v("Fiber中的更新任务依然是串行执行的,对于那些高优先级的任务依旧会被阻塞")]),s._v(" "),a("li",[s._v("整个中断与恢复的过程中最复杂的是如何保持状态的一致性和视图的一致性")])]),s._v(" "),a("h3",{attrs:{id:"fiber的中断-恢复机制是如何控制状态一致性和视图一致性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber的中断-恢复机制是如何控制状态一致性和视图一致性"}},[s._v("#")]),s._v(" Fiber的中断/恢复机制是如何控制状态一致性和视图一致性")]),s._v(" "),a("blockquote",[a("p",[s._v("状态必须按照插入顺序进行计算，但任务可以按优先级顺序执行")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Tips")]),s._v(" "),a("p",[s._v("假设有一updateQueue为A1 - B2 - C1 - D2；\nA1、B2等代表一个update，其中字母代表state，数字大小代表优先级，1为高优先级；\n调度任务按高低优先级依次执行，第一次调度是高优先级任务，从头结点firstUpdate开始处理，processUpdateQueue会跳过低优先级的update；\n则执行的update为A1 - C1，本次调度得到的最终state为AC，baseState为A，queue的firstUpdate指针指向B2，以供下次调度使用；\n第二次调度是低优先级任务，此时firstUpdate指向B2，则从B2开始，执行的update为\nB2 - C1 - D2，最终state将与baseState：A合并，得到ABCD, "),a("strong",[s._v("所以整个过程C1会被执行两次")])]),s._v(" "),a("p",[s._v("整个机制就会导致render阶段的生命周期(will类型生命周期)发生了两次")]),s._v(" "),a("p",[s._v("整个过程发生在processUpdateQueue方法中")])]),s._v(" "),a("h2",{attrs:{id:"fiber的数据结构组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber的数据结构组成"}},[s._v("#")]),s._v(" Fiber的数据结构组成")]),s._v(" "),a("ol",[a("li",[s._v("用于表示链表结构属性的信息")])]),s._v(" "),a("div",{staticClass:"language-flow js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前Fiber节点的父节点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前Fiber节点的子节点")]),s._v("\n    child"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前Fiber节点的兄弟节点")]),s._v("\n    sibling"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    index"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("用于表示一些渲染结构的信息")])]),s._v(" "),a("div",{staticClass:"language-flow js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 标记不同组件的类型")]),s._v("\n    tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" WorkTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReactElement的属性key ")]),s._v("\n    key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReactElement.type, 表示标签类型, 也就是我们调用`createElement`的第一个参数")]),s._v("\n    elementType"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 异步组件返回的类型,一般是function或者class ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 与Fiber相关的本地状态(比如reactDOM下的原生DOM节点),这和宿主环境有关")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Root节点的stateNode对应的是FiberRoot对象")]),s._v("\n    stateNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("用于表示一些工作单元的信息")])]),s._v(" "),a("div",{staticClass:"language-flow js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新变动带来的新props")]),s._v("\n    pendingProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上一次渲染完成的props")]),s._v("\n    memoizedProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该Fiber对应组件产生更新存放的链表")]),s._v("\n    updateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上次渲染完成的state")]),s._v("\n    memoizedState"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 存放Fiber依赖context对象 ")]),s._v("\n    contextDependencies"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ContextDependencyList "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示当前的渲染模式")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NoContext = 0b000;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ConcurrentMode = 0b001;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// StrictMode = 0b010;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ProfileMode = 0b100;")]),s._v("\n    mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" TypeOfMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录sideEffect")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 性能检测 & 更新删除插入 & 生命周期")]),s._v("\n    effectTag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" SideEffectTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Effect链表中指向下一个Effect ")]),s._v("\n    nextEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中第一个side effect")]),s._v("\n    firstEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中最后一个side effect")]),s._v("\n    lastEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点的过期时间 ")]),s._v("\n    expirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子节点中的最高优先级的过期时间")]),s._v("\n    childExpirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在Fiber树更新的过程中，每个Fiber都会有一个跟其对应的Fiber")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们称他为`current <==> workInProgress`(Fiber双缓存技术)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在渲染完成之后他们会交换位置")]),s._v("\n    alternate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])]),a("h3",{attrs:{id:"fiber为什么使用链表结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber为什么使用链表结构"}},[s._v("#")]),s._v(" Fiber为什么使用链表结构")]),s._v(" "),a("blockquote",[a("p",[s._v("React Fiber被称为虚拟栈帧(virtual Stack Frame)")])]),s._v(" "),a("ol",[a("li",[s._v("使用链表不是目的,能够模拟调用栈才是Fiber的目的,链表这种能中断和恢复的特性符合模拟的要求,而整个遍历过程也就由递归变成了迭代")]),s._v(" "),a("li",[s._v("链表可以保存了和调用栈一样的上下文信息(child表示子栈, return表示父栈)")]),s._v(" "),a("li",[s._v("通过return属性,当节点出现异常的时候,我们可以通过return回溯打印出完整的节点栈")])]),s._v(" "),a("h2",{attrs:{id:"fiberroot和rootfiber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiberroot和rootfiber"}},[s._v("#")]),s._v(" FiberRoot和RootFiber")]),s._v(" "),a("blockquote",[a("p",[s._v("FiberRoot和RootFiber产生关系的时机是ReactDOM.render调用"),a("RouterLink",{attrs:{to:"/docs/framework/react16/react_origin_renderAndUpdate.html#创建fiberroot和rootfiber"}},[s._v("createFiberRoot")]),s._v("的时候")],1)]),s._v(" "),a("ol",[a("li",[s._v("FiberRoot是整个应用的根节点, 通过current属性指向当前的RootFiber")]),s._v(" "),a("li",[s._v("RootFiber在应用中存在两个一个是currentRootFiber,表示当前渲染呈现的RootFiber; 一个是workInProgressRootFiber, 表示内存中调度更新的RootFiber, RootFiber通过stateNode指向FiberRoot")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("FiberRoot")]),s._v(" "),a("p",[s._v("通过调用createFiberRoot创建的对象, FiberRoot是应用的根节点, 通过current属性连接RootFiber(Fiber)")]),s._v(" "),a("div",{staticClass:"language-flow js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" BaseFiberRootProperties "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// root挂载容器,调用ReactROM.render(<App />, document.getElementById('root'))的第二个参数")]),s._v("\n    containerInfo"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在不支持增量更新的平台使用,比如RN,需要使用持久化更新 ")]),s._v("\n    pendingChildren"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前指向的RootFiber")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// React通过双缓存机制,在current和workInProgress之间切换")]),s._v("\n    current"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 以下的优先级是用来区分")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1) 没有提交(committed)的任务")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2) 没有提交的挂起任务")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3) 没有提交的可能被挂起的任务")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中最早的在提交阶段被挂起暂停的优先级值")]),s._v("\n    earliestSuspendedTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中最迟的在提交阶段被挂起暂停的优先级值")]),s._v("\n    latestSuspendedTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中需要进行渲染的最早的优先级值")]),s._v("\n    earliestPendingTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中需要进行渲染的最迟的优先级值")]),s._v("\n    latestPendingTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中最新的挂起的可以重新尝试的优先级值")]),s._v("\n    latestPingedTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于suspense错误捕获")]),s._v("\n    pingCache"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" WeakMap"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Thenable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Set"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ExpirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Map"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("Thenable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Set"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("ExpirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// renderRoot出现错误时,并且此时没有其他的更新,会尝试重新渲染")]),s._v("\n    didError"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 正在等待提交任务的过期时间")]),s._v("\n    pendingCommitExpirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待进入commit提交更新阶段的任务")]),s._v("\n    finishedWork"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// it's superseded by a new one.")]),s._v("\n    timeoutHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" TimeoutHandle "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" NoTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 顶层context对象，只有主动调用renderSubtreeIntoContainer才会生效")]),s._v("\n    context"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    pendingContext"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Object "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否是服务端渲染")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("hydrate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前要更新渲染的是哪个优先级的任务")]),s._v("\n    nextExpirationTimeToWorkOn"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前更新对应的过期时间")]),s._v("\n    expirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// List of top-level batches. This list indicates whether a commit should be")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// deferred. Also contains completion callbacks.")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO: Lift this into the renderer")]),s._v("\n    firstBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Batch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// root之间关联的链表结构")]),s._v("\n    nextScheduledRoot"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" FiberRoot "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br")])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("RootFiber&Fiber")]),s._v(" "),a("ol",[a("li",[s._v("通过createFiber创建,RootFiber是当前Fiber树的根节点")]),s._v(" "),a("li",[s._v("Fiber和ReactElement是一一对应的")])]),s._v(" "),a("div",{staticClass:"language-flow js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-flow"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token flow-punctuation punctuation"}},[s._v("{|")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 标记不同组件的类型")]),s._v("\n    tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" WorkTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReactElement的属性key ")]),s._v("\n    key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ReactElement.type, 表示标签类型, 也就是我们调用`createElement`的第一个参数")]),s._v("\n    elementType"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 异步组件返回的类型,一般是function或者class ")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 与Fiber相关的本地状态(比如reactDOM下的原生DOM节点),这和宿主环境有关")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Root节点的stateNode对应的是FiberRoot对象")]),s._v("\n    stateNode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 链表树结构")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前Fiber节点的父节点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前Fiber节点的子节点")]),s._v("\n    child"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当前Fiber节点的兄弟节点")]),s._v("\n    sibling"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    index"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ref属性")]),s._v("\n    ref"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("handle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("mixed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" _stringRef"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("string")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" RefObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新变动带来的新props")]),s._v("\n    pendingProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上一次渲染完成的props")]),s._v("\n    memoizedProps"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该Fiber对应组件产生更新存放的链表")]),s._v("\n    updateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" UpdateQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 上次渲染完成的state")]),s._v("\n    memoizedState"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 存放Fiber依赖context对象 ")]),s._v("\n    contextDependencies"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ContextDependencyList "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表示当前的渲染模式")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NoContext = 0b000;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ConcurrentMode = 0b001;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// StrictMode = 0b010;")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ProfileMode = 0b100;")]),s._v("\n    mode"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" TypeOfMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 记录sideEffect")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 性能检测 & 更新删除插入 & 生命周期")]),s._v("\n    effectTag"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" SideEffectTag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Effect链表中指向下一个Effect ")]),s._v("\n    nextEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中第一个side effect")]),s._v("\n    firstEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子树中最后一个side effect")]),s._v("\n    lastEffect"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该节点的过期时间 ")]),s._v("\n    expirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 子节点中的最高优先级的过期时间")]),s._v("\n    childExpirationTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ExpirationTime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在Fiber树更新的过程中，每个Fiber都会有一个跟其对应的Fiber")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们称他为`current <==> workInProgress`(Fiber双缓存技术)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在渲染完成之后他们会交换位置")]),s._v("\n    alternate"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下面是调试相关的，收集每个Fiber和子树渲染时间的")]),s._v("\n    actualDuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    actualStartTime"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    selfBaseDuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    treeBaseDuration"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开发模式下使用")]),s._v("\n    _debugID"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    _debugSource"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Source "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    _debugOwner"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Fiber "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    _debugIsCurrentlyTiming"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    _debugHookTypes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("HookType"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token type tag"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token flow-punctuation punctuation"}},[s._v("|}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br")])])]),s._v(" "),a("h2",{attrs:{id:"fiber双缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fiber双缓存"}},[s._v("#")]),s._v(" Fiber双缓存")]),s._v(" "),a("blockquote",[a("p",[s._v("Fiber双缓存类似图形化领域的双缓存")])]),s._v(" "),a("ol",[a("li",[s._v("在Reconciliation的render阶段将所有更改点在workInProgress(WIP树)上处理完成,然后在commit阶段统一更新到浏览器上")]),s._v(" "),a("li",[s._v("由于WIP树的节点是可以共用的,因此这样可以减少内存的分配和垃圾的回收")]),s._v(" "),a("li",[s._v("同时修改WIP树节点不会影响原有的current树,类似于git中的Fork出来的分支")]),s._v(" "),a("li",[s._v("保存执行任务中的信息,避免任务打断而造成数据丢失")])]),s._v(" "),a("h3",{attrs:{id:"双缓存结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双缓存结构"}},[s._v("#")]),s._v(" 双缓存结构")]),s._v(" "),a("p",[s._v("当前在屏幕上显示的成为current Fiber, 在内存中构建的成为workInProgress Fiber")]),s._v(" "),a("h2",{attrs:{id:"为什么vue没有fiber-分片机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么vue没有fiber-分片机制"}},[s._v("#")]),s._v(" 为什么Vue没有Fiber(分片机制)")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/vuejs/rfcs/issues/89#issuecomment-546988615",target:"_blank",rel:"noopener noreferrer"}},[s._v("尤雨溪的回答"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);