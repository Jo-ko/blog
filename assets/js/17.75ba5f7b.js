(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{515:function(t,e,a){"use strict";a.r(e);var c=a(3),i=function(t){t.options.__data__block__={flowchart_1a96284d:"st=>start: GET /index.html\nhasCache=>condition: 是否使用缓存?\nhasStrongCache=>condition: 强缓存没过期?\nnegotiateCache=>condition: 协商缓没过期?\nserverReturn=>operation: 服务器获取内容\n304=>parallel: 返回304\ncacheReturn=>operation: 返回本地缓存\ne=>end: 返回结果 index.html\n\nst->hasCache\nhasCache(no)->serverReturn\nhasCache(yes)->hasStrongCache\nhasStrongCache(yes)->cacheReturn\nhasStrongCache(no)->negotiateCache\nnegotiateCache(yes)->304\n304(path1, left)->cacheReturn\nnegotiateCache(no)->serverReturn\ncacheReturn->e\nserverReturn->e",flowchart_382ee14a:"st=>start: GET /index.html\ncacheCheck=>parallel: 校验逻辑判断\nhasCC=>parallel: Cache-Control标识\nhasEx=>operation: Expire标识\nhasCCAuth=>condition: 没有缓存机制?\nhasCCOver=>condition: 缓存没到期?\ne1=>end: 返回缓存资源\ne2=>end: 协商缓存校验\ne3=>end: 请求服务端资源\n\nst->cacheCheck\ncacheCheck(path1, bottom)->hasCC\ncacheCheck(path2, right)->hasEx\nhasEx->hasCCOver\nhasCC(path1, right)->hasCCAuth\nhasCC(path2, bottom)->hasCCOver\nhasCCAuth(yes@有缓存标识)->e1\nhasCCAuth(no@没有缓存标识)->e3\nhasCCOver(yes@缓存没到期)->e1\nhasCCOver(no@缓存到期, left)->e2"}},n=Object(c.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"整体简化流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整体简化流程"}},[t._v("#")]),t._v(" 整体简化流程")]),t._v(" "),a("FlowChart",{attrs:{id:"flowchart_1a96284d",code:t.$dataBlock.flowchart_1a96284d,preset:"vue"}}),a("h3",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓的强缓存其实指的是判断资源直接读取本地还是向服务器获取更新的资源")])]),t._v(" "),a("h4",{attrs:{id:"判断流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断流程"}},[t._v("#")]),t._v(" 判断流程")]),t._v(" "),a("FlowChart",{attrs:{id:"flowchart_382ee14a",code:t.$dataBlock.flowchart_382ee14a,preset:"vue"}}),a("h4",{attrs:{id:"相关header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关header"}},[t._v("#")]),t._v(" 相关header")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Pragma")]),t._v(" "),a("ol",[a("li",[t._v("只有一个值: no-cache")]),t._v(" "),a("li",[t._v("效果和Cache-Control: no-cache一致")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Cache-Control")]),t._v(" "),a("p",[t._v("用于控制缓存行为,"),a("strong",[t._v("优先级最高")]),t._v(", 弥补Expires的时间相对问题(Expires的时间是相对服务器而言的),")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("字段名")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表示可以被任何对象缓存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("只允许个体客户端（如浏览器）去缓存，而不允许共享高速缓存（如CDN）去缓存。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no-store")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不允许缓存,包括强缓存和协商缓存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no-cache")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("客户端缓存内容,但是返回之前需要服务端进行协商验证")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("max-age")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("设置缓存的最大周期时间,类似Expires,单位秒 但这个时间是相对于请求时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s-maxage")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("会覆盖max-age和Expires,单位秒, 但仅适用共享缓存(CDN)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("max-stable")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("表明客户端愿意接收一个已经过期的资源,设置的时间表示响应时间")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("min-fresh")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("告知服务器,客户端希望接收一个在小于该时间的被更新过的资源")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("must-revalidation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("一旦资源过期(比如已经超过max-age),在成功向原始服务器验证之前,缓存不能用该资源,请求失败会返回504")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("proxy-revalidation")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("和must-revalidation类似,但只能用于共享资源")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("only-if-cached")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("客户端只接收已经缓存的响应,但不用向服务器验证资源是否更新")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no-transform")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("不允许对资源进行格式转换")])])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Expires")]),t._v(" "),a("ol",[a("li",[t._v("控制缓存过期时间")]),t._v(" "),a("li",[t._v("请求头携带 "),a("strong",[t._v("if-Last-modified")]),t._v(" 时,服务端响应头携带改信息和 "),a("strong",[t._v("Last-modified")])]),t._v(" "),a("li",[t._v("HTTP 1.0产物,受制于浏览器本地时间,本地时间修改会导致资源过期")])])]),t._v(" "),a("h4",{attrs:{id:"memory-cache-disk-cache-prefetch-cache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#memory-cache-disk-cache-prefetch-cache"}},[t._v("#")]),t._v(" memory-cache & disk-cache & prefetch cache")]),t._v(" "),a("ol",[a("li",[t._v("from memory cache\n"),a("ul",[a("li",[t._v("从内存中读取缓存")]),t._v(" "),a("li",[t._v("读取速度最快")]),t._v(" "),a("li",[t._v("适合小文件")])])]),t._v(" "),a("li",[t._v("from disk cache\n"),a("ul",[a("li",[t._v("从硬盘中读取缓存")]),t._v(" "),a("li",[t._v("读取速度相比内存较慢")]),t._v(" "),a("li",[t._v("适合小文件")]),t._v(" "),a("li",[t._v("由于存储在硬盘中,保存的时间长")])])]),t._v(" "),a("li",[t._v("prefetch cache\n"),a("ul",[a("li",[t._v("标识preload和prefetch资源加载时,从http cache中读取")]),t._v(" "),a("li",[t._v("使用完后存储在memory cache中")])])])]),t._v(" "),a("h3",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("blockquote",[a("p",[t._v("所谓的协商缓存是判断服务器的资源是否真的已经更新,是的就返回对应的资源,如果不是就返回304,浏览器直接读取本地缓存")])]),t._v(" "),a("h4",{attrs:{id:"相关header-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关header-2"}},[t._v("#")]),t._v(" 相关header")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Last-Modified和If-Modified-Since(If-Unmodified-Since)")]),t._v(" "),a("ol",[a("li",[t._v("http1.0产物, 表示资源修改的时间,精确到秒")]),t._v(" "),a("li",[t._v("Last-Modified告诉浏览器当前 "),a("strong",[t._v("资源的最后修改时间")])]),t._v(" "),a("li",[t._v("第一次服务器传给浏览器的Last-Modified,第二次请求的时候会将该值赋值给if-Modified-Since传递给服务器")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("ETag和If-None-Match(If-Match)")]),t._v(" "),a("p",[t._v("优先级比Last-Modified高,用于解决Last-Modified的一些问题:\n- 修改时间只能精确到秒级\n- 对于一些文件,虽然修改时间变化了, 但内部的数据内容并没变化\n- 服务器未正确捕获文件修改时间")]),t._v(" "),a("ol",[a("li",[t._v("http 1.1产物, 标识资源状态")]),t._v(" "),a("li",[t._v("ETag是资源内容的 "),a("strong",[t._v("hash字符串")]),t._v(",由服务器生成")]),t._v(" "),a("li",[t._v("第一次服务器返回的Etag值,第二次请求时会将该值赋值给If-None-Match")]),t._v(" "),a("li",[t._v("对于分布式服务器,需要保持Etag值一致")])])])],1)}),[],!1,null,null,null);"function"==typeof i&&i(n);e.default=n.exports}}]);