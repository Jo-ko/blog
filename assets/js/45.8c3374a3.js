(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{557:function(t,e,r){"use strict";r.r(e);var a=r(3),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"react16"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#react16"}},[t._v("#")]),t._v(" React16")]),t._v(" "),r("h2",{attrs:{id:"_16相比15主要增加了什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16相比15主要增加了什么"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/52016989",target:"_blank",rel:"noopener noreferrer"}},[t._v("16相比15主要增加了什么?"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"_16早期版本-16-0-16-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16早期版本-16-0-16-7"}},[t._v("#")]),t._v(" 16早期版本(16.0 - 16.7)")]),t._v(" "),r("ol",[r("li",[t._v("修改了原有的生命周期\n"),r("ol",[r("li",[t._v("标记原有的componentWillMount,componentWillReceiveProps,componentWillUpdate为不安全")]),t._v(" "),r("li",[t._v("新增getDerivedStateFromProps,getSnapShotBeforeUpdate")])])]),t._v(" "),r("li",[t._v("增加错误边界机制(Error Boundaries)\n"),r("ol",[r("li",[t._v("componentDidCatch生命周期")]),t._v(" "),r("li",[t._v("getDerivedStateFromError生命周期")])])]),t._v(" "),r("li",[t._v("增加"),r("a",{attrs:{href:"/blog/docs/framework/react/react_fiber"}},[t._v("Fiber")]),t._v("架构模式代替原有的stack架构")]),t._v(" "),r("li",[t._v("react-call-return(很久没有更新了)")]),t._v(" "),r("li",[t._v("Suspense组件")]),t._v(" "),r("li",[t._v("Hooks")])]),t._v(" "),r("h3",{attrs:{id:"_16后期版本-16-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16后期版本-16-8"}},[t._v("#")]),t._v(" 16后期版本(16.8+)")]),t._v(" "),r("ol",[r("li",[t._v("增加Concurrent Mode(并发渲染模式)")])]),t._v(" "),r("h2",{attrs:{id:"生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),r("img",{attrs:{src:t.$withBase("/framework/react_lifeCycle_16.png"),alt:"react_lifeCycle_16"}}),t._v(" "),r("ol",[r("li",[t._v("componentWillMount,componentWillReceiveProps,componentWillUpdate被计划移除,原因是这些生命周期可能会在Fiber架构模式下重复执行一些副作用操作")]),t._v(" "),r("li",[t._v("getDerivedStateFromProps用来被替代componentWillReceiveProps")]),t._v(" "),r("li",[t._v("getSnapShotBeforeUpdate用来被替代componentWillUpdate")])]),t._v(" "),r("h2",{attrs:{id:"错误边界"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误边界"}},[t._v("#")]),t._v(" 错误边界")]),t._v(" "),r("blockquote",[r("p",[t._v("错误边界是用于捕获子组件渲染时异常的")])]),t._v(" "),r("h3",{attrs:{id:"错误边界可以捕获和不可以捕获"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#错误边界可以捕获和不可以捕获"}},[t._v("#")]),t._v(" 错误边界可以捕获和不可以捕获")]),t._v(" "),r("ol",[r("li",[t._v("能捕获子组件渲染异常,不能捕获本身渲染异常")]),t._v(" "),r("li",[t._v("能捕获render和各个生命周期函数, 不能捕获回调事件错误,异步和服务端渲染错误")]),t._v(" "),r("li",[t._v("能捕获运行时错误, 无法捕获编译时错误")]),t._v(" "),r("li",[t._v("能捕获函数组件错误, 不能在函数组件内部定义边界错误, 同理Hooks组件")])]),t._v(" "),r("h3",{attrs:{id:"componentdidcatch和getderivedstatefromerror的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#componentdidcatch和getderivedstatefromerror的区别"}},[t._v("#")]),t._v(" componentDidCatch和getDerivedStateFromError的区别")]),t._v(" "),r("ol",[r("li",[t._v("getDerivedStateFromProps会在 "),r("strong",[t._v("Reconciliation阶段")]),t._v(" 被调用,该阶段是可以被中断的,因此可能会重复执行,所以适用一些无副作用的操作,比如,更新State")]),t._v(" "),r("li",[t._v("componentDidCatch会在 "),r("strong",[t._v("commit阶段")]),t._v(" 被调用,该阶段是不可以中断的,因此可以用于执行一些副作用的操作,比如上传错误日志")])])])}),[],!1,null,null,null);e.default=o.exports}}]);