(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{528:function(t,s,a){"use strict";a.r(s);var n=a(3),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("上下文决定了当前环境能够访问到哪些数据以及访问他们的行为方式")])]),t._v(" "),a("h2",{attrs:{id:"上下文保存的信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#上下文保存的信息"}},[t._v("#")]),t._v(" 上下文保存的信息")]),t._v(" "),a("ol",[a("li",[t._v("活动对象: 当前上下文的变量和函数(包括arguments对象)\n"),a("ol",[a("li",[t._v("变量环境: 通过var声明或function(){}声明的变量")]),t._v(" "),a("li",[t._v("词法环境: 通过const,let, with, trycatch创建的变量")])])]),t._v(" "),a("li",[t._v("作用域链: 决定各级上下文访问变量和函数的顺序(当前栈始终在作用域链的最前端)")]),t._v(" "),a("li",[t._v("this指针对象:")])]),t._v(" "),a("h2",{attrs:{id:"变量提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量提升"}},[t._v("#")]),t._v(" 变量提升")]),t._v(" "),a("ol",[a("li",[t._v("实质是一段JS在经过编译器编译之后,会被分为 "),a("strong",[t._v("可执行代码")]),t._v(" 和 "),a("strong",[t._v("执行上下文")])]),t._v(" "),a("li",[t._v("与var不同的是let和const由于 "),a("strong",[t._v("暂时性死区")]),t._v(" 的缘故,无法在显式声明之前被访问")]),t._v(" "),a("li",[a("strong",[t._v("函数声明")]),t._v(" 会把整个函数提升至当前作用域的顶部")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/js/variableAscension.png"),alt:"variableAscension"}}),t._v(" "),a("p",[t._v("::: 如何同时做到变量提升和块级作用域\n先查找词法环境中的变量栈, 没找到再查询变量环境\n"),a("img",{attrs:{src:t.$withBase("/js/lexicalEnvironment.png"),alt:"lexicalEnvironment"}}),t._v("\n:::")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("暂时性死区")]),t._v(" "),a("p",[t._v("指的是在新的作用域进行实例化的时候,let/const声明的变量会先在作用域被创建,但此时还未进行词法绑定,是无法访问的")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("函数优先")]),t._v(" "),a("p",[t._v("函数声明和变量声明都会造成变量提升,但是函数声明会优先提升,然后是变量声明,但是变量声明不会覆盖之前同名的函数声明")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("foo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("h2",{attrs:{id:"全局作用域赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域赋值"}},[t._v("#")]),t._v(" 全局作用域赋值")]),t._v(" "),a("p",[t._v("var如果在全局作用域环境定义会被赋值在全局对象上,而let和const则不会")]),t._v(" "),a("h2",{attrs:{id:"const优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const优化"}},[t._v("#")]),t._v(" const优化")]),t._v(" "),a("p",[t._v("由于const的不可变性,JS引擎会在编译的阶段替换变量为实际值,以此来优化查找速度")]),t._v(" "),a("h2",{attrs:{id:"作用域嵌套查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域嵌套查询"}},[t._v("#")]),t._v(" 作用域嵌套查询")]),t._v(" "),a("p",[t._v("沿着作用域链从当前作用域不断向上查找变量标识符,变量层级越高,消耗的性能越大")]),t._v(" "),a("h2",{attrs:{id:"词法作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#词法作用域"}},[t._v("#")]),t._v(" 词法作用域")]),t._v(" "),a("ol",[a("li",[t._v("作用域的类型有 "),a("strong",[t._v("词法作用域(静态作用域)")]),t._v(" 和 "),a("strong",[t._v("动态作用域")]),t._v(" 两种类型, JS属于词法作用域")]),t._v(" "),a("li",[t._v("词法作用域简单的讲就是定义在词法阶段的作用域")]),t._v(" "),a("li",[t._v("通过一些手法可以达到欺骗词法作用域的目的\n"),a("ol",[a("li",[t._v("eval: eval生成的动态脚本作用域由他执行当前作用域环境决定")]),t._v(" "),a("li",[t._v("with: with通过修改当前作用域的属性的引用对象来改变变量读取的内容")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("词法作用域类型")]),t._v(" "),a("ol",[a("li",[t._v("全局作用域")]),t._v(" "),a("li",[t._v("函数作用域")]),t._v(" "),a("li",[t._v("针对let和const还有块级作用域")])])]),t._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("blockquote",[a("p",[t._v("内部函数总是可以访问到外部函数的变量环境,当外部函数返回内部函数的时候,即使外部函数已经出栈,但外部函数的变量仍保存在内存中,而这些变量的集合就成为闭包")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("baz")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   fn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" baz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将 baz 分配给全局变量 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h3",{attrs:{id:"闭包的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的作用"}},[t._v("#")]),t._v(" 闭包的作用")]),t._v(" "),a("ol",[a("li",[t._v("限制变量的访问权限,定义私有属性")]),t._v(" "),a("li",[t._v("避免全局变量污染,实现模块化")])]),t._v(" "),a("h3",{attrs:{id:"闭包的危害"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的危害"}},[t._v("#")]),t._v(" 闭包的危害")]),t._v(" "),a("p",[t._v("由于闭包造成的作用域变量无法被垃圾回收机制所回收, 会导致内存占用过大")]),t._v(" "),a("h3",{attrs:{id:"闭包的实质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包的实质"}},[t._v("#")]),t._v(" 闭包的实质")]),t._v(" "),a("p",[a("strong",[t._v("先看下一段函数执行的过程")])]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'outer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" sign "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0b01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inner "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("ol",[a("li",[t._v("执行到outer()时候,会对outer进行预编译,进行变量提升,生成执行上下文栈环境\n"),a("ol",[a("li",[t._v("对于var声明的变量会放到变量环境中, const声明的变量放到词法环境中(暂时性死区), 这两个环境都存在执行上下文栈中")]),t._v(" "),a("li",[t._v("遇到inner函数,会进行提升,同时预扫描函数内部,进行词法扫描,发现引用name变量,此时会把name变量从栈移到堆内存的闭包集合中")]),t._v(" "),a("li",[t._v("在outer的变量环境中生成 "),a("strong",[t._v("clourse(outer)")]),t._v(" 的变量属性,并将上面的闭包地址赋值给该变量")])])]),t._v(" "),a("li",[t._v("开始执行代码,当返回inner函数的时候,outer整个栈环境会被回收,除了clourse(outer)所对应的堆内存仍会被inner函数引用,不会被回收")])]),t._v(" "),a("p",[a("strong",[t._v("因此我们知道,当我们把一个函数返回给外层的某一个对象的时候,其函数仍然保存着对上层变量对象的引用, 因此垃圾回收机制无法回收上层变量对象")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("VO & AO & GO")]),t._v(" "),a("p",[t._v("VO: "),a("strong",[t._v("表示当前上下文中的所有变量")]),t._v(", VO涵盖AO, 当VO在全局执行上下文时, 也表示全局对象\nAO: "),a("strong",[t._v("私有变量对象(也叫活动对象)")]),t._v(", AO更侧重在函数执行上下文创建的变量\nGO: "),a("strong",[t._v("全局对象")]),t._v(", GO表示的是宿主环境下的globalThis属性(window,global)")]),t._v(" "),a("p",[a("strong",[t._v("VO")])]),t._v(" "),a("ul",[a("li",[t._v("对于var声明的变量来说\n"),a("ul",[a("li",[t._v("在全局执行上下文中, VO具体的表现和GO一致, 因为所有创建的变量都会映射给全局变量GO, VO可以理解为等于GO")]),t._v(" "),a("li",[t._v("在函数执行上下文中, VO就是AO")])])]),t._v(" "),a("li",[t._v("对于let/const声明的变量来说\n"),a("ul",[a("li",[t._v("VO不会把这部分映射给GO,因此此时的VO是包含GO但不等于GO")]),t._v(" "),a("li",[t._v("此时全局声明的let/const,是无法通过globalThis获取的")])])])]),t._v(" "),a("p",[a("strong",[t._v("GO")]),t._v("\n与VO和AO没有关机,是预定义的宿主环境对象,也是整个作用域链最外层的对象")])])])}),[],!1,null,null,null);s.default=r.exports}}]);